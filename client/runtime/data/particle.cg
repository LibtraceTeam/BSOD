struct appdata 
{
	float4 position : POSITION;
	float4 color	: COLOR0;
	float3 normal	: NORMAL;
	float2 tex		: TEXCOORD0; 
};

struct vfconn
{
	float4 HPos	: POSITION;
	float4 Col0	: COLOR0;
};

vfconn main(appdata IN,	uniform float4x4 ModelViewProj)
{
	vfconn OUT;			
	
	float progress = IN.tex.x;		
	
	IN.position.x = IN.position.x + ((IN.normal.x - IN.position.x) * progress);
	IN.position.y = IN.position.y + ((IN.normal.y - IN.position.y) * progress);
	IN.position.z = IN.position.z + ((IN.normal.z - IN.position.z) * progress);
	
	if(IN.position.x > 15 || IN.position.x < -15){
		IN.position.x = -9999;
	}
	
	//IN.position.y = (IN.position.y + IN.normal.y) / 2;
	//IN.position.z = (IN.position.z + IN.normal.z) / 2;
		
	// Transform The Vertex Position Into Homogenous Clip-Space (Required)
	OUT.HPos = mul(ModelViewProj, IN.position);

	// Set The Color To The Value Specified In IN.color
	OUT.Col0.xyz = IN.color.xyz;

	return OUT;
}
